name: Create and publish a Docker image

on:
  push:
    branches: 
      - 'releases/**'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  CONTAINER_NAME: data-fortress-position-tracking
  CONTAINER_PORT: 5800

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    name: "Deploy to staging"
    runs-on: ubuntu-latest
    needs: build-and-push-image

    steps:
      - name: Tailscale
        uses: tailscale/github-action@v1
        with:
          authkey: ${{ secrets.TAILSCALE_AUTHKEY }}
      
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.TOWER_SSH_HOST }}
          username: ${{ secrets.TOWER_SSH_USERNAME }}
          password: ${{ secrets.TOWER_SSH_PASSWORD }}
          port: ${{ secrets.TOWER_SSH_PORT }}
          script: |
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            docker stop ${{ env.CONTAINER_NAME }} 
            docker rm ${{ env.CONTAINER_NAME }} 
            docker run -d \
            --name ${{ env.CONTAINER_NAME }} \
            -p ${{ env.CONTAINER_PORT }}:80 \
            -e MINIO_HOST=${{ secrets.MINIO_HOST }} \
            -e MINIO_ACCESS_KEY=${{ secrets.MINIO_ACCESS_KEY }} \
            -e MINIO_SECRET_KEY=${{ secrets.MINIO_SECRET_KEY }} \
            -e MINIO_SSL=${{ secrets.MINIO_SSL }} \
            -e MINIO_REGION=${{ secrets.MINIO_REGION }} \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
